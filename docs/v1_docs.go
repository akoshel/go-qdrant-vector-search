// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplatev1 = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/books": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of books in the the store",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routers.Book"
                            }
                        }
                    }
                }
            }
        },
        "/createCollection": {
            "post": {
                "description": "post string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates Qdrant Collection",
                "parameters": [
                    {
                        "description": "New collection description",
                        "name": "newCollection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.NewCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "503": {
                        "description": "error"
                    }
                }
            }
        },
        "/removeCollection": {
            "post": {
                "description": "post string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates Qdrant Collection",
                "parameters": [
                    {
                        "description": "Remove collection description",
                        "name": "removeCollection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.ToRemoveCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "503": {
                        "description": "error"
                    }
                }
            }
        },
        "/upsertVector": {
            "post": {
                "description": "post string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upsert vector",
                "parameters": [
                    {
                        "description": "New vector",
                        "name": "newVector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.NewVector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "503": {
                        "description": "error"
                    }
                }
            }
        }
    },
    "definitions": {
        "routers.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routers.NewCollection": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "vectorSize": {
                    "type": "integer"
                }
            }
        },
        "routers.NewVector": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "routers.ToRemoveCollection": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfov1 holds exported Swagger Info so clients can modify it
var SwaggerInfov1 = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server.",
	InfoInstanceName: "v1",
	SwaggerTemplate:  docTemplatev1,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfov1.InstanceName(), SwaggerInfov1)
}
